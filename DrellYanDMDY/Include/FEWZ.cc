#include "FEWZ.hh"
#include <TFile.h>
#include <TString.h>

// ----------------------------------------------------------

#ifndef _8TeV_analysis_
// Constructor for 7 TeV analysis
FEWZ_t::FEWZ_t(bool loadWeights, bool do_cutZPT100) : fInitialized(kFALSE), fCutZPT100(do_cutZPT100) {
  if (loadWeights) {
    TFile fweights("../root_files/fewz/weights_stepwise_prec10-5_fine12.root");
    if(do_cutZPT100)
      cout << "FEWZ_t NOTE: in MC, for Z/gamma* PT>100 the FEWZ weights for 80<PT<100 GeV are used!" << endl;
    if( !fweights.IsOpen() ) assert(0);
    bool ok=kTRUE;
    for(int i=0; ok && (i<_nMassBinsFEWZ); i++){
      TString hnames = TString::Format("weight_%02d",i+1);
      weights[i] = (TH2D*)fweights.Get(hnames);
      hnames = TString::Format("h_weighterror_%02d",i+1);
      weightErrors[i] = (TH2D*)fweights.Get(hnames);
      if (!weights[i] || !weightErrors[i]) ok=kFALSE;
      else {
	weights[i]->SetDirectory(0);
	weightErrors[i]->SetDirectory(0);
      }
    }
    fInitialized=ok;
  }
}
#endif

// ----------------------------------------------------------

#ifdef _8TeV_analysis_
// Constructor for 8 TeV analysis. Everything is defined in a macro
FEWZ_t::FEWZ_t(bool loadWeights, bool do_cutZPT100)
  : fInitialized(loadWeights), fCutZPT100(do_cutZPT100) {
  for (int i=0; i<_nMassBinsFEWZ; ++i) {
    weights[i]=NULL;
    weightErrors[i]=NULL;
  }
}
#endif

// ----------------------------------------------------------
// ----------------------------------------------------------

#ifdef _8TeV_analysis_
int FEWZ_t::prepareHisto_8TeV(Int_t mass_bin, int abs_rapidity) {

  // if histo is available, do nothing
  if (weights[mass_bin]) return 1;

  // create the histogram
  TString name=Form("FEWZ_weights_8TeV_%2.0lf_%2.0lf",_massBinLimitsFEWZ[mass_bin],_massBinLimitsFEWZ[mass_bin+1]);
  //std::cout << "preparing histo " << name << ", mass_bin=" << mass_bin << "\n";
  const int nYbins_loc=(abs_rapidity) ? nrapbins_FEWZ8TeV : (2*nrapbins_FEWZ8TeV-1);
  double Ybins[nYbins_loc];
  const double maxRapidity=10.;
  if (abs_rapidity) {
    for (int iY=0; iY<nrapbins_FEWZ8TeV; ++iY) Ybins[iY]=rap_bin_FEWZ8TeV[iY];
    Ybins[nrapbins_FEWZ8TeV-1]=maxRapidity;
  }
  else {
    for (int iY=0; iY<nrapbins_FEWZ8TeV-1; ++iY) {
      Ybins[iY] = -rap_bin_FEWZ8TeV[nrapbins_FEWZ8TeV - 1 - iY];
      Ybins[iY + nrapbins_FEWZ8TeV - 1]=rap_bin_FEWZ8TeV[iY];
    }
    Ybins[0] = -maxRapidity;
    Ybins[nYbins_loc-1] = maxRapidity;
    //for (int iY=0; iY<nYbins_loc; ++iY) std::cout << " " << Ybins[iY]; std::cout << std::endl;
  }

  double ptbins[nptbins_FEWZ8TeV];
  for (int ipt=0; ipt<nptbins_FEWZ8TeV; ++ipt) ptbins[ipt]=pt_bin_FEWZ8TeV[ipt];
  ptbins[nptbins_FEWZ8TeV-1]=800.;
  TH2D *h2=new TH2D(name,name, nptbins_FEWZ8TeV-1,ptbins, nYbins_loc-1,Ybins);
  h2->SetDirectory(0);
  h2->Reset();
  weights[mass_bin]=h2;
  double mass=this->getMassCenter(mass_bin);
  for (int ipt=0; ipt<nptbins_FEWZ8TeV-1; ++ipt) {
    double pt=0.5*(pt_bin_FEWZ8TeV[ipt] + pt_bin_FEWZ8TeV[ipt+1]);
    for (int iY=0; iY<nYbins_loc-1; ++iY) {
      double y=0.5*(Ybins[iY] + Ybins[iY+1]);
      double w=this->getWeight(mass, pt, y);
      //std::cout << "weight for pt=" << pt << ", y=" << y << " is " << w << "\n";
      h2->SetBinContent(ipt+1,iY+1, w);
      h2->SetBinError(ipt+1,iY+1, 0.);
    }
  }
  return 1;
}
#endif

// ----------------------------------------------------------
// ----------------------------------------------------------

#ifdef _8TeV_analysis_

// A macro from Alexey Svyatkovskiy <asvyatko@purdue.edu> providing
// FEWZ NNLO/NLO correction weight maps


// ----------------------------------------------------------

int Find_Index_FEWZ8TeV( double muon_input, bool isPt )
{

  //const int nptbins = 21;
  //const int nrapbins = 8;
  //double rap_bin[nrapbins] = {0.,0.2,0.4,0.7,1.1,1.9,2.4,1000.0};
  //double pt_bin[nptbins] = {0.0,20.0,30.,35.,40.,45.,50.,55.,60.,65.,70.,75.,80.,85.,90.,100.,120.,150.,300.,600.,1000.};
  const int nptbins = nptbins_FEWZ8TeV;
  const int nrapbins= nrapbins_FEWZ8TeV;
  const double *rap_bin= rap_bin_FEWZ8TeV;
  const double *pt_bin = pt_bin_FEWZ8TeV;

   int Index = -1;

  if( isPt ) {
    for( int i = 0; i < nptbins-1; i++ ) {
      if( muon_input > pt_bin[i] && muon_input <= pt_bin[i+1] ) {
             Index = i;
             break;
      }
      else if( muon_input > pt_bin[nptbins-1] ) Index = nptbins-2; //overflow
    }
    return Index;
  } else {
    for( int i = 0; i < nrapbins-1; i++ ) {
      if( muon_input > rap_bin[i] && muon_input <= rap_bin[i+1] ) {
          Index = i;
          break;
       }
      else if( muon_input > rap_bin[nrapbins-1] ) Index = nrapbins-2; //overflow
    }
    return Index;
  }
}



double weight_FEWZ8TeV( double muon_pt, double muon_rap, double mass) {
  if (muon_rap<0) muon_rap=fabs(muon_rap);

 int index_pt = -1;
 int index_rap = -1;

 //const int nptbins = 21;
 //const int nrapbins = 8;
 const int nptbins = nptbins_FEWZ8TeV;
 const int nrapbins= nrapbins_FEWZ8TeV;
 index_pt = Find_Index_FEWZ8TeV(muon_pt, true);
 index_rap = Find_Index_FEWZ8TeV(muon_rap, false);

double weights_fewz_1520[nrapbins-1][nptbins-1] = {{
1.00545, 1.35107, 1.67734, 1.38296, 2.07191, 2.2383, 2.6285, 3.16131, 1.76507, 2.27395, 1.41322, 3.27808, 5.67029, 1.56674, 6.17357, 3.17562, 4.96732, 1.84633, 0, 0}, {
1.00896, 1.44091, 1.69193, 1.63781, 2.05394, 2.25929, 1.67816, 3.83361, 3.51645, 2.77749, 1.23096, 2.4649, 0, 4.79651, 2.37795, 0, 1.75216, 0, 0.905032, 0}, {
1.01433, 1.36724, 1.40312, 1.66474, 2.27941, 1.54627, 2.33991, 4.01565, 2.97855, 2.04154, 4.34882, 2.26957, 3.93247, 5.70059, 1.947, 4.80146, 0, 5.36575, 0, 0}, {
1.02105, 1.31369, 1.3402, 1.53691, 1.44964, 1.96627, 2.33466, 2.67136, 1.69393, 2.74362, 2.78797, 2.06251, 5.45056, 4.36285, 6.1448, 3.87093, 2.88285, 1.2123, 0, 0}, {
1.01353, 1.29109, 1.47495, 1.51466, 1.71151, 2.35005, 1.96764, 2.16117, 2.88286, 3.02129, 2.73048, 2.70367, 1.93877, 5.55772, 2.90913, 2.70617, 7.42664, 4.81416, 0.604043, 0}, {
1.00559, 1.2284, 1.38454, 1.44724, 1.58415, 1.52377, 1.53281, 2.10855, 2.10702, 2.35972, 1.89933, 4.33309, 3.56924, 4.74125, 2.97194, 2.41181, 0, 4.12634, 0, 0}, {
0.992118, 1.10271, 1.15659, 1.27158, 1.62208, 1.42337, 1.47131, 1.93548, 1.81959, 2.01983, 1.86507, 1.43802, 2.72245, 4.03602, 1.5132, 3.50591, 1.90549, 0, 0, 0}};


double weights_fewz_2030[nrapbins-1][nptbins-1] = {{
0.966773, 1.08143, 1.1778, 1.23887, 1.26707, 1.33697, 1.46822, 1.5375, 1.69097, 1.9069, 1.75858, 1.84119, 2.02084, 2.46501, 1.99671, 2.42805, 2.51458, 2.57888, 9.81223, 0}, {
0.966798, 1.07081, 1.20389, 1.22648, 1.27722, 1.35758, 1.55829, 1.52767, 1.63365, 1.89339, 1.89429, 2.09381, 1.91144, 2.227, 2.04043, 2.35403, 2.84797, 3.06217, 8.13536, 0}, {
0.971272, 1.07556, 1.18806, 1.2103, 1.25951, 1.3681, 1.46694, 1.47797, 1.62932, 1.67324, 2.05459, 1.9281, 2.02829, 2.07281, 2.16169, 2.06108, 2.61065, 2.55456, 7.11455, 0}, {
0.977167, 1.0845, 1.20333, 1.23528, 1.29576, 1.36674, 1.50729, 1.50954, 1.65008, 1.76309, 1.83739, 1.89465, 1.8436, 2.12152, 2.07122, 2.18366, 2.38117, 2.919, 5.53902, 24.2479}, {
0.985928, 1.10296, 1.23127, 1.26139, 1.31728, 1.41396, 1.51471, 1.51362, 1.6334, 1.77504, 1.84957, 1.82868, 1.98503, 1.87602, 1.88777, 2.08267, 2.38277, 2.29762, 3.44044, 0}, {
1.00137, 1.13355, 1.26052, 1.30088, 1.35504, 1.40146, 1.56955, 1.63959, 1.69204, 1.82876, 1.9977, 1.99623, 2.05118, 1.86837, 2.21078, 2.13472, 2.84808, 2.26468, 11.5104, 0}, {
1.01964, 1.19657, 1.32989, 1.35619, 1.44294, 1.51596, 1.62569, 1.72954, 1.72481, 1.80237, 2.00475, 2.02063, 2.03059, 2.24092, 2.1735, 2.35375, 2.68358, 2.84217, 0, 0}};


double weights_fewz_72106[nrapbins-1][nptbins-1] = {{
1.06658, 1.00849, 0.992395, 0.957157, 0.970585, 0.978903, 0.979721, 0.992522, 1.00906, 1.00312, 1.02634, 1.07589, 1.07161, 1.10453, 1.09965, 1.09882, 1.23253, 1.18435, 1.49695, 2.63783}, {
1.06126, 1.00808, 0.988931, 0.965669, 0.973047, 0.971618, 0.990243, 0.997585, 0.986548, 1.01115, 1.02348, 1.0492, 1.10934, 1.12188, 1.11969, 1.10477, 1.24128, 1.19605, 1.56656, 2.23084}, {
1.06816, 1.00913, 0.993855, 0.960227, 0.970008, 0.976793, 0.995107, 1.00626, 1.0025, 1.02382, 1.03736, 1.04736, 1.078, 1.0999, 1.09486, 1.11216, 1.23017, 1.18417, 1.49241, 2.33469}, {
1.06722, 1.00391, 0.997167, 0.966684, 0.971191, 0.975544, 0.977605, 1.00801, 1.00377, 1.0147, 1.03575, 1.06497, 1.07374, 1.10159, 1.0976, 1.12576, 1.23867, 1.21783, 1.58525, 3.08755}, {
1.07402, 1.0132, 1.00675, 0.977138, 0.98657, 0.993277, 1.0024, 1.01873, 1.01638, 1.03647, 1.06806, 1.05759, 1.07668, 1.11918, 1.12458, 1.1323, 1.27099, 1.24161, 1.63776, 2.60259}, {
1.08736, 1.01954, 1.01625, 0.990883, 1.00325, 1.0167, 1.01503, 1.03568, 1.02512, 1.05256, 1.0627, 1.09308, 1.1091, 1.15582, 1.13863, 1.16281, 1.275, 1.25693, 1.61981, 0.492055}, {
1.08247, 1.021, 1.02633, 1.00129, 1.01509, 1.02719, 1.04706, 1.06055, 1.08114, 1.09274, 1.10103, 1.12769, 1.13181, 1.19283, 1.17319, 1.1948, 1.32633, 1.26232, 1.26297, 0}};


double weights_fewz_3001500[nrapbins-1][nptbins-1] = {{
1.10875, 1.00621, 1.05125, 0.862914, 0.927903, 0.929509, 0.857743, 0.838416, 0.829221, 0.893049, 0.861248, 0.919538, 0.803518, 0.802778, 0.733172, 0.756374, 0.858579, 0.86023, 0.794881, 2.2268}, {
1.09021, 1.0019, 0.980161, 0.874918, 1.01196, 0.897036, 0.731359, 0.827066, 0.928654, 0.964986, 0.747181, 0.74612, 1.07092, 0.817801, 0.808754, 0.764708, 0.902821, 0.90277, 0.890676, 1.45543}, {
1.08729, 0.980485, 1.12829, 0.950109, 0.988757, 1.00824, 1.06632, 0.997473, 0.922524, 0.931437, 0.839758, 0.9526, 0.852339, 0.897441, 0.961947, 0.916594, 0.743569, 0.797414, 0.915282, 0.698964}, {
1.16704, 1.05397, 0.899978, 0.860584, 0.948632, 0.832235, 0.936215, 0.876747, 0.715646, 0.862792, 0.854235, 0.945949, 0.761033, 0.754132, 0.802923, 0.764241, 0.850515, 0.806512, 1.00131, 0.699787}, {
1.16555, 1.04061, 0.908592, 0.874463, 0.877704, 0.876478, 0.818913, 0.787256, 0.891226, 0.81621, 0.827912, 0.737761, 0.716908, 0.756884, 0.799427, 0.769532, 0.879963, 0.762065, 0.73894, 0.489253}, {
1.13956, 1.01561, 0.813315, 0.932809, 0.870235, 0.911267, 0.937295, 0.883054, 1.18649, 1.04416, 0.866915, 0.746151, 0.986817, 0.817805, 0.86023, 1.03074, 0.828073, 0.700417, 3.19611, 0}, {
1.11181, 0.928421, 0.666384, 0.82582, 0.917147, 0.472038, 0.666309, 1.88024, 0.509763, 2.95524, 1.12284, 15.2349, 0.622211, 0, 0.789656, 0.740072, 0.479505, 0.311576, 0, 0}};


double weights_fewz_3045[nrapbins-1][nptbins-1] = {{
0.988264, 0.966025, 1.01351, 1.06403, 1.08941, 1.14252, 1.2733, 1.2452, 1.14393, 1.14032, 1.21724, 1.39217, 1.43685, 1.56033, 1.45559, 1.55313, 1.53777, 2.13563, 6.7545, 0}, {
0.991586, 0.969309, 1.03904, 1.06654, 1.07953, 1.1507, 1.19244, 1.18402, 1.30117, 1.37528, 1.38514, 1.40663, 1.49118, 2.01523, 1.38482, 1.79288, 1.94915, 2.12074, 8.72659, 0}, {
0.989525, 0.979091, 1.02557, 1.0171, 1.08854, 1.10965, 1.24743, 1.19218, 1.22308, 1.26559, 1.25069, 1.30238, 1.25242, 1.38708, 1.57156, 1.82246, 1.70257, 1.81929, 3.74839, 0}, {
0.998794, 0.981113, 1.06363, 1.04632, 1.1137, 1.11955, 1.21406, 1.19963, 1.26204, 1.27241, 1.32826, 1.36017, 1.4042, 1.50342, 1.65459, 1.59214, 1.72308, 1.97004, 4.52674, 0}, {
1.00813, 0.995629, 1.04136, 1.06176, 1.10756, 1.15236, 1.19997, 1.26777, 1.24547, 1.26752, 1.28457, 1.41052, 1.40412, 1.49714, 1.46747, 1.6511, 1.73052, 1.8257, 3.55007, 0}, {
1.01894, 1.015, 1.09682, 1.10514, 1.12745, 1.13739, 1.26376, 1.28733, 1.29435, 1.32143, 1.41428, 1.43419, 1.26463, 1.52352, 1.34906, 1.83316, 1.71119, 1.76119, 4.36666, 0}, {
1.03615, 1.05707, 1.12941, 1.1437, 1.17518, 1.21496, 1.29695, 1.32732, 1.30751, 1.48354, 1.4589, 1.5507, 1.51964, 1.62512, 1.67643, 1.74933, 2.03303, 2.12871, 0, 0}};


double weights_fewz_4560[nrapbins-1][nptbins-1] = {{
1.01774, 0.959114, 0.943085, 0.97241, 0.990671, 0.993031, 0.989307, 1.16567, 1.05749, 1.18303, 1.21687, 1.32514, 1.36477, 1.01299, 1.29688, 1.29339, 1.73579, 1.10857, 1.88828, 0}, {
1.02797, 0.932822, 0.976452, 0.93678, 1.04548, 0.96493, 1.02305, 1.04736, 1.07329, 1.06402, 1.26128, 1.0291, 1.06096, 1.16687, 1.28269, 1.31411, 1.30634, 1.6578, 3.6618, 0}, {
1.02233, 0.932453, 0.957646, 0.987787, 0.972131, 0.986595, 1.03695, 1.06515, 1.05563, 1.14777, 1.16229, 1.14601, 1.19741, 1.13996, 1.26241, 1.21205, 1.52483, 1.63998, 0, 0}, {
1.02778, 0.944662, 0.968523, 0.97857, 0.959439, 0.983581, 0.992459, 1.0552, 1.03788, 1.07475, 1.13232, 1.17414, 1.40491, 0.971692, 1.21535, 1.28432, 1.5142, 1.22823, 3.08042, 3.5837}, {
1.03649, 0.95683, 0.985509, 0.961963, 0.992706, 1.04364, 1.03588, 1.02137, 1.13775, 1.14921, 1.22892, 1.1146, 1.14089, 1.19499, 1.17145, 1.32271, 1.50282, 1.26532, 0.961262, 0}, {
1.04026, 0.981621, 0.99248, 1.02049, 1.00379, 1.0751, 1.06047, 1.08987, 1.08108, 1.2605, 1.10464, 1.09528, 1.41061, 1.33443, 1.3748, 1.27855, 1.51164, 1.52406, 1.69783, 0}, {
1.05169, 1.00063, 1.03491, 1.00748, 1.04277, 1.06693, 1.10961, 1.1503, 1.23217, 1.22954, 1.22207, 1.27412, 1.27682, 1.30567, 1.33241, 1.32311, 1.48903, 1.70713, 0, 0}};

double weights_fewz_6072[nrapbins-1][nptbins-1] = {{
1.07761, 0.934157, 0.956672, 0.944863, 0.995951, 0.964485, 0.887315, 0.879265, 1.00482, 0.969649, 1.13384, 1.01832, 0.926685, 1.11049, 0.919538, 1.15693, 1.10783, 1.14198, 1.37813
, 0}, {1.04645, 0.928312, 0.942534, 0.949619, 0.910638, 1.03085, 0.971907, 0.919348, 1.06796, 1.12412, 0.993995, 1.24292, 1.09691, 0.878787, 1.14136, 1.29596, 1.17369, 1.11252, 1.80553, 0}, {1.05083, 0.956194, 0.947371, 0.881565, 0.95689, 0.977627, 0.966093, 0.984458, 0.958803, 1.0191, 0.983644, 0.926234, 1.18116, 1.06617, 1.00135, 1.19513, 1.17236, 1.16763, 3.32314, 1.362}, {1.08041, 0.943571, 0.959101, 0.939405, 0.95992, 0.947706, 1.03405, 0.982456, 0.963546, 0.932353, 1.00994, 1.06391, 1.13412, 1.16221, 1.05765, 1.12983, 1.15871, 1.33974, 1.61567, 0}, {1.03792, 1.00087, 1.32608, 1.18269, 1.17313, 1.1682, 1.11323, 1.13443, 1.17991, 1.13371, 1.286, 1.10408, 1.27168, 1.20084, 1.28636, 1.31934, 1.28857, 1.47149, 4.9482, 0}, {1.07154, 0.972952, 0.982377, 0.966839, 1.01474, 0.983433, 0.978091, 0.989419, 0.974042, 1.09152, 1.04181, 1.10047, 1.00884, 1.07373, 1.11966, 1.23123, 1.24254, 
.38351, 2.87256, 0}, {1.06578, 0.994999, 1.00027, 0.980491, 1.00496, 0.992416, 1.09608, 1.05667, 1.104, 1.1604, 1.2131, 1.10893, 1.1953, 1.13938, 1.07251, 1.2219, 1.46919, 1.17857, 0.148721, 0}};

double weights_fewz_106120[nrapbins-1][nptbins-1] = {{
1.05873, 1.0119, 1.02991, 0.939245, 0.976506, 0.947712, 0.939604, 0.992047, 0.885459, 0.871725, 0.944972, 1.07307, 0.96957, 1.24707, 0.975716, 1.0363, 1.14125, 1.12239, 1.46137, 0}, {
1.06969, 1.00655, 1.03119, 0.992089, 0.989582, 1.1082, 0.988479, 0.893785, 0.927517, 1.00974, 0.966824, 1.01019, 1.05619, 1.07154, 0.999422, 1.08243, 1.12411, 1.17206, 1.10599, 0}, {
1.07951, 1.0155, 0.989683, 1.00608, 0.995115, 0.948764, 0.968853, 0.986175, 1.08059, 1.02933, 1.04582, 0.993264, 0.894418, 0.952446, 1.06172, 0.975915, 1.16309, 1.15009, 1.01285, 0}, {
1.0801, 1.01942, 0.973624, 0.944229, 0.974782, 0.919598, 0.944091, 0.943431, 1.01607, 0.915297, 1.03567, 0.942333, 0.949638, 1.06467, 1.0063, 1.11678, 1.1482, 1.0293, 0.89277, 0.482798}, {
1.07952, 1.01133, 0.991122, 0.96887, 0.97046, 1.0202, 0.991022, 0.945817, 0.934962, 1.04178, 0.980899, 1.00476, 1.0402, 1.04994, 1.04577, 1.11488, 1.16374, 1.11307, 1.36017, 0}, {
1.08322, 1.01996, 1.03901, 0.98909, 1.07356, 1.04053, 0.906599, 0.98649, 0.914178, 1.03614, 1.00166, 1.03981, 0.991355, 1.00781, 1.15541, 1.10132, 1.12371, 1.35758, 1.57514, 0}, {
1.0917, 1.00789, 1.00207, 0.993972, 0.975286, 0.999764, 0.989653, 1.04389, 0.982484, 1.15339, 1.05274, 1.0292, 1.26187, 1.12847, 1.24252, 1.17905, 1.20951, 1.04624, 0, 0}};


double weights_fewz_120133[nrapbins-1][nptbins-1] = {{
1.057, 1.08851, 1.03155, 0.938985, 0.982337, 0.911752, 0.926026, 1.04232, 0.953075, 0.97747, 0.828693, 0.828059, 0.996353, 1.23441, 0.988006, 1.20799, 1.01175, 0.973656, 1.23393, 0}, {
1.09472, 1.07877, 0.93486, 0.913382, 0.895602, 0.962645, 0.907222, 0.869808, 1.01795, 0.85459, 0.986099, 1.00779, 1.08947, 1.06762, 0.856227, 1.00961, 0.803259, 0.915279, 0.991843, 0}, {
1.11312, 0.903001, 0.947792, 0.865444, 0.896477, 0.890202, 0.911917, 1.02303, 0.933352, 0.797655, 0.94621, 0.972367, 1.10282, 1.14047, 1.2277, 0.909289, 1.17618, 1.16263, 1.11288, 0}, {
1.07411, 1.00645, 0.961072, 0.976881, 0.991095, 0.833844, 1.02136, 0.977665, 0.91031, 1.02824, 1.0413, 0.955754, 1.1643, 0.977426, 1.07969, 1.06312, 1.15284, 0.952574, 1.70189, 0}, {
1.08155, 1.02622, 1.0307, 0.977538, 1.01954, 0.882134, 0.951208, 0.962852, 0.943802, 1.03511, 1.00955, 0.914983, 0.870402, 1.14718, 0.963348, 1.03348, 1.24538, 1.03531, 1.19053, 0}, {
1.09823, 1.00898, 1.0464, 0.888766, 0.955075, 1.01532, 0.994701, 0.905367, 1.08945, 1.13255, 0.858864, 0.970195, 1.03876, 1.03489, 1.08224, 0.993749, 1.19452, 0.998362, 2.20891, 0}, {
1.08703, 1.00648, 0.951536, 0.957553, 0.982132, 0.906608, 0.926876, 0.925932, 0.992088, 0.936445, 0.796292, 0.952421, 1.28892, 1.19693, 1.05953, 1.44991, 1.11696, 0.850865, 0, 0}};


double weights_fewz_133150[nrapbins-1][nptbins-1] = {{
1.08012, 0.977625, 1.03341, 1.1674, 0.987606, 0.741902, 1.11102, 0.939858, 1.08506, 0.771582, 1.12933, 0.945194, 0.786842, 0.997266, 1.08532, 1.1638, 1.00377, 0.978018, 0.825444, 0}, {
1.10801, 1.02, 1.08643, 0.90349, 0.852767, 0.912749, 1.13209, 0.908377, 1.02587, 0.918561, 0.817077, 1.09046, 0.869998, 0.743486, 0.863851, 1.25703, 0.870526, 0.888274, 1.24381, 0.182145}, {
1.08282, 1.04912, 1.00557, 0.960936, 1.14109, 0.887113, 0.959622, 0.910116, 1.03958, 0.885463, 0.851534, 0.961874, 0.847922, 0.964116, 0.95732, 1.12887, 1.31053, 1.07504, 0.714366, 0.276499}, {
1.07287, 1.01771, 0.965072, 0.85174, 0.91686, 0.944926, 0.952409, 0.814735, 0.898059, 0.837296, 1.0502, 1.16284, 1.06838, 1.01195, 1.06069, 0.915104, 1.12298, 0.975791, 1.43318, 0}, {
1.07892, 1.02907, 1.04841, 1.01864, 1.0228, 1.11834, 1.09825, 1.03935, 1.03359, 1.20292, 1.08472, 1.18832, 1.14255, 0.998602, 1.07459, 1.07393, 1.04694, 1.02591, 1.70985, 0}, {
1.10929, 1.00831, 1.01788, 0.934247, 0.991885, 0.89412, 0.933001, 1.10794, 1.0041, 0.984162, 0.764402, 0.825079, 0.919866, 1.38997, 0.931239, 1.12492, 0.905574, 1.065, 1.82481, 0}, {
1.08708, 1.05829, 0.977154, 0.988841, 0.902943, 0.998563, 0.835989, 1.00665, 0.97662, 1.01685, 0.885607, 1.20477, 1.03694, 0.853765, 1.0463, 1.22208, 1.08849, 0.791631, 0.146384, 0}};

double weights_fewz_150160[nrapbins-1][nptbins-1] = {{
1.04973, 1.10292, 1.16646, 1.06761, 1.08817, 0.914312, 1.20301, 0.950202, 1.07714, 0.871606, 0.957126, 0.746031, 1.02932, 0.846206, 1.07668, 0.745161, 1.03639, 1.0193, 0.664832, 0}, {
1.12576, 1.12139, 1.04759, 0.994034, 0.897305, 1.20403, 0.822312, 1.29307, 0.749859, 0.920098, 1.05928, 1.06101, 0.918846, 0.895626, 1.09256, 1.09757, 0.931465, 0.939912, 0.567325, 0}, {
1.07264, 0.964494, 0.944281, 1.03398, 0.909712, 1.04161, 0.880983, 0.910368, 1.05654, 0.93392, 0.894215, 1.1192, 0.848335, 1.05065, 0.933359, 0.865165, 1.09245, 0.899954, 0.847421, 0}, {
1.12129, 1.0985, 1.07246, 0.879512, 0.849155, 1.07526, 1.0724, 0.917262, 0.884814, 0.853688, 0.774436, 1.28342, 1.00638, 0.998314, 0.91849, 0.954184, 0.91917, 1.09235, 1.03678, 0}, {
1.22141, 0.738276, 0.736981, 0.769277, 0.71477, 0.827852, 0.70261, 0.78326, 0.754742, 0.712676, 0.850772, 0.758686, 0.76844, 0.881372, 0.753154, 0.801794, 0.957769, 0.875731, 0.945832, 0}, {
1.12699, 1.0123, 0.957622, 0.881095, 0.966692, 0.969963, 0.871927, 1.12655, 0.993799, 1.09694, 0.909143, 0.844126, 1.01185, 1.24686, 0.971477, 0.946992, 0.989132, 1.06643, 0, 0}, {
1.11248, 0.954476, 1.01383, 1.16708, 0.848629, 0.892416, 0.845108, 1.11878, 1.24669, 0.926016, 1.03267, 0.928442, 1.01369, 0.795859, 0.912871, 1.28236, 0.840883, 0.923012, 0.0523904, 0}};

double weights_fewz_160171[nrapbins-1][nptbins-1] = {{
1.04975, 1.10295, 1.16649, 1.06764, 1.08819, 0.914334, 1.20303, 0.950224, 1.07716, 0.871626, 0.957149, 0.746048, 1.02935, 0.846226, 1.07671, 0.745179, 1.03641, 1.01932, 0.664847, 0}, {1.12579, 1.12141, 1.04762, 0.994057, 0.897326, 1.20405, 0.822331, 1.2931, 0.749877, 0.92012, 1.05931, 1.06104, 0.918868, 0.895647, 1.09259, 1.09759, 0.931487, 0.939934, 0.567338, 0},{1.07267, 0.964517, 0.944304, 1.034, 0.909734, 1.04163, 0.881003, 0.910389, 1.05656, 0.933942, 0.894236, 1.11923, 0.848355, 1.05068, 0.933381, 0.865185, 1.09248, 0.899975, 0.847441, 0},
{1.12131, 1.09853, 1.07248, 0.879533, 0.849175, 1.07528, 1.07243, 0.917283, 0.884835, 0.853708, 0.774454, 1.28345, 1.0064, 0.998338, 0.918512, 0.954207, 0.919191, 1.09237, 1.03681, 0}, {1.12144, 0.738293, 0.736999, 0.769295, 0.714787, 0.827872, 0.702627, 0.783279, 0.75476, 0.712693, 0.850792, 0.758703, 0.768459, 0.881393, 0.753171, 0.801813, 0.957792, 0.875752, 0.945854, 0}, {1.12102, 1.01232, 0.957644, 0.881115, 0.966714, 0.969986, 0.871948, 1.12658, 0.993822, 1.09697, 0.909164, 0.844146, 1.01187, 1.24689, 0.9715, 0.947014, 0.989155, 1.06646, 0, 0}, {1.1125, 0.954499, 1.01385, 1.1671, 0.848649, 0.892437, 0.845128, 1.1188, 1.24672, 0.926038, 1.03269, 0.928463, 1.01371, 0.795878, 0.912893, 1.28239, 0.840903,
 0.923034, 0.0523917, 0}};

double weights_fewz_171200[nrapbins-1][nptbins-1] = {{
1.24865, 0.985302, 0.990975, 0.891478, 0.898538, 0.730797, 0.809623, 0.816709, 0.835784, 1.01035, 0.754299, 0.782371, 1.77922, 0.761046, 1.28805, 1.01804, 1.12174, 0.967496, 0.967901, 0}, {
1.07648, 1.06263, 0.89914, 1.05751, 1.03358, 1.29764, 1.25813, 1.15984, 1.0342, 0.863939, 0.873606, 0.988729, 1.08015, 0.965749, 1.04197, 1.04423, 1.05133, 0.777253, 1.30721, 0.160724}, {
1.06773, 1.11513, 1.08875, 1.01602, 1.02117, 0.975448, 0.964107, 0.918378, 0.944355, 1.0748, 1.09299, 0.918812, 1.16289, 0.857182, 0.907762, 0.86923, 1.04445, 0.805726, 0.566968, 0}, {
1.06079, 1.03156, 1.06733, 0.974657, 1.06642, 0.909137, 1.11683, 0.891209, 0.75068, 0.899653, 0.943671, 0.967164, 1.01996, 1.03722, 0.975927, 0.827367, 1.00329, 1.18841, 1.73825, 0}, {
1.08157, 1.0105, 1.03496, 0.984298, 0.898792, 0.944966, 0.925701, 0.955224, 1.02631, 1.00669, 0.859147, 1.04028, 1.11142, 0.973064, 0.987153, 0.912122, 1.10261, 0.911318, 1.25054, 0}, {
1.11086, 0.97258, 1.06867, 1.00672, 0.837066, 0.803315, 0.941846, 0.898709, 0.814023, 0.912814, 0.858437, 0.918693, 0.838397, 1.16084, 0.965838, 1.00723, 0.909715, 0.891347, 0, 0}, {
1.09911, 0.963891, 0.904295, 0.879729, 0.879164, 1.23338, 0.720358, 0.893589, 0.95245, 1.04743, 1.61358, 0.842183, 0.811625, 0.949631, 1.24873, 1.03499, 0.879687, 1.30398, 0, 0}};


double weights_fewz_200400[nrapbins-1][nptbins-1] = {{
1.05163, 1.07017, 1.0619, 0.950534, 1.04713, 0.863768, 0.833587, 1.01204, 1.02843, 0.853774, 0.940584, 0.83141, 0.782407, 1.02283, 0.908675, 0.758785, 0.956698, 0.994958, 0.805749, 1.3386}, {
1.04521, 1.04386, 0.930791, 0.898523, 0.971637, 0.963146, 0.906147, 0.889786, 0.952963, 0.9147, 0.709226, 0.989657, 1.05176, 0.705954, 0.930171, 0.966702, 0.993358, 0.83972, 0.726604, 1.33807}, {
1.05353, 1.00639, 1.0648, 1.0649, 0.954322, 0.806254, 0.93944, 0.897202, 1.00361, 0.912833, 0.949486, 0.987576, 0.908714, 0.991005, 0.940359, 0.913916, 0.865047, 0.940059, 1.06057, 1.80607}, {
1.08662, 1.07488, 0.924839, 0.908147, 0.977578, 0.908748, 0.928316, 0.806247, 0.80877, 0.893125, 0.827129, 0.973365, 0.826352, 0.810157, 0.94934, 0.910019, 0.992954, 0.871868, 1.03533, 1.83272}, {
1.1018, 1.07135, 0.996596, 0.910972, 0.966956, 0.943697, 0.894124, 0.876996, 0.94015, 0.911408, 0.962875, 0.889164, 0.756957, 0.873164, 0.914784, 0.897806, 0.900892, 0.852211, 0.92471, 1.07466}, {
1.10234, 1.00682, 0.915941, 0.859709, 0.884753, 0.912166, 0.991882, 0.952903, 0.940754, 0.902508, 0.912509, 1.05121, 1.02407, 0.71617, 0.972878, 0.943076, 0.861404, 0.937157, 0.962047, 0}, {
1.06379, 0.929729, 0.94056, 0.874005, 0.883115, 0.835778, 0.817004, 0.794745, 0.759338, 0.845548, 0.953676, 1.43127, 0.678503, 0.886274, 0.809751, 0.825068, 0.972945, 0.861689, 0, 0}};


    if (mass >= 15 && mass < 20) {
      return weights_fewz_1520[index_rap][index_pt];
    } else if (mass >= 20 && mass < 30) {
      return weights_fewz_2030[index_rap][index_pt];
    } else if (mass >= 30 && mass < 45) {
      return weights_fewz_3045[index_rap][index_pt];
    } else if (mass >= 45 && mass < 60) {
      return weights_fewz_4560[index_rap][index_pt];
    } else if (mass >= 60 && mass < 72) {
      return weights_fewz_6072[index_rap][index_pt];
    } else if (mass >= 72 && mass < 106) {
      return weights_fewz_72106[index_rap][index_pt];
    } else if (mass >= 106 && mass < 120) {
      return weights_fewz_106120[index_rap][index_pt];
    } else if (mass >= 120 && mass < 133) {
      return weights_fewz_120133[index_rap][index_pt];
    } else if (mass >= 133 && mass < 150) {
      return weights_fewz_133150[index_rap][index_pt];
    } else if (mass >= 150 && mass < 160) {
      return weights_fewz_150160[index_rap][index_pt];
    } else if (mass >= 160 && mass < 171) {
      return weights_fewz_160171[index_rap][index_pt];
    } else if (mass >= 171 && mass < 200) {
      return weights_fewz_171200[index_rap][index_pt];
    } else if (mass >= 200 && mass < 400) {
      return weights_fewz_200400[index_rap][index_pt];
    } else if (mass >= 400 && mass < 1500) {
      return weights_fewz_3001500[index_rap][index_pt];
    }

    return 1.;
}

// end of A macro from Alexey Svyatkovskiy <asvyatko@purdue.edu> providing


#endif

// ----------------------------------------------------------
// ----------------------------------------------------------

